<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0a692853-6731-45c0-b492-0afd993f5a59" name="Changes" comment="hotfix VM">
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.20.4" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="release/PROS-42" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2PXE3BmkMa4qzunONlDUbbiI504" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="sortByType" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/mskKote/HSE/prospero/backend/internal/domain/entity/article",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.keymap",
    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\GoLand 2022.3.3\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "redis",
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\mskKote\HSE\prospero\backend\internal\domain\entity\article" />
      <recent name="C:\mskKote\HSE\prospero\backend\internal\adapters\db\elastic\publisherSearchRepository" />
      <recent name="C:\mskKote\HSE\prospero\backend" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\mskKote\HSE\prospero\backend\pkg\lib" />
      <recent name="C:\mskKote\HSE\prospero\backend\resources" />
      <recent name="C:\mskKote\HSE\prospero\backend\internal\adapters\db\postgres\sourcesRSS" />
      <recent name="C:\mskKote\HSE\prospero\backend\internal\domain\entity\source" />
      <recent name="C:\mskKote\HSE\prospero\backend\internal\domain\entity\publisher" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.postgres: Compose Deployment">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/mskKote/prospero_backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/mskKote/prospero_backend/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/mskKote/prospero_backend/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/mskKote/prospero_backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.elasticsearch: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="VDSina">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="elasticsearch" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.jaeger: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="VDSina">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="jaeger" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="VDSina">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.prospero: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="VDSina">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prospero" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.postgres: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.prospero: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.jaeger: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.elasticsearch: Compose Deployment" />
        <item itemvalue="Go Build.go build github.com/mskKote/prospero_backend/cmd" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="CI/CD №5 remove only app container" />
    <MESSAGE value="CI/CD №6 remove only app container" />
    <MESSAGE value="CI/CD test new handler" />
    <MESSAGE value="CI/CD test new handler #2" />
    <MESSAGE value="update deps" />
    <MESSAGE value="config" />
    <MESSAGE value="update Dockerfile" />
    <MESSAGE value="deploy-job.yml" />
    <MESSAGE value="deploy-job.yml №2" />
    <MESSAGE value="deploy-job.yml №3" />
    <MESSAGE value="deploy-job.yml №4" />
    <MESSAGE value="deploy-job.yml test" />
    <MESSAGE value="Dockerfile" />
    <MESSAGE value="docker-compose.yml sleep" />
    <MESSAGE value="config route" />
    <MESSAGE value="deploy-job.yml recreate container" />
    <MESSAGE value="Dockerfile &amp; url" />
    <MESSAGE value="wait for ES" />
    <MESSAGE value="test no deps to ES" />
    <MESSAGE value="gitignore .idea" />
    <MESSAGE value="tracing middleware" />
    <MESSAGE value="[PROS-40] no more duplicate articles" />
    <MESSAGE value="hotfix 500" />
    <MESSAGE value="hotfix ES stops" />
    <MESSAGE value="hotfix VM" />
    <option name="LAST_COMMIT_MESSAGE" value="hotfix VM" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/adapters/db/elastic/articlesSearchRepository/ArticlesSearchRepository.go</url>
          <line>319</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>