// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Vitalii Popov",
            "url": "https://www.linkedin.com/in/mskkote/",
            "email": "msk.vitaly@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/RSS/addSource": {
            "post": {
                "description": "Create a new RSS source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Create new RSS source",
                "parameters": [
                    {
                        "description": "Add Source DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/source.AddSourceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/RSS/getEnrichedSources": {
            "get": {
                "description": "Read RSS sources with associated publishers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Read RSS sources with publishers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/RSS/getSources": {
            "get": {
                "description": "Read RSS sources with optional search and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Read RSS sources",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/RSS/harvest": {
            "post": {
                "description": "Harvest RSS feeds and parse articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Harvest RSS",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/RSS/removeSource": {
            "delete": {
                "description": "Delete RSS source by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Delete RSS source",
                "parameters": [
                    {
                        "description": "Delete Source DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/source.DeleteSourceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/RSS/updateSource": {
            "put": {
                "description": "Update existing RSS source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Update RSS source",
                "parameters": [
                    {
                        "description": "Update Source DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/source.DTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/addPublisher": {
            "post": {
                "description": "Create a new publisher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Create new publisher",
                "parameters": [
                    {
                        "description": "Add Publisher DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/publisher.AddPublisherDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/addSourceAndPublisher": {
            "post": {
                "description": "Add a new source along with its corresponding publisher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sources"
                ],
                "summary": "Add Source and Publisher",
                "parameters": [
                    {
                        "description": "Add Source and Publisher DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/source.AddSourceAndPublisherDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/getPublishers": {
            "get": {
                "description": "Read publishers with optional search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Read publishers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grandFilter": {
            "post": {
                "description": "Perform a grand filter search based on provided parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Perform grand filter search",
                "parameters": [
                    {
                        "description": "Array of search strings with \u0026\u0026 as the joining operator",
                        "name": "filterStrings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchString"
                            }
                        }
                    },
                    {
                        "description": "Array of search people",
                        "name": "filterPeople",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchPeople"
                            }
                        }
                    },
                    {
                        "description": "Array of search publishers",
                        "name": "filterPublishers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchPublishers"
                            }
                        }
                    },
                    {
                        "description": "Array of search countries",
                        "name": "filterCountry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchCountry"
                            }
                        }
                    },
                    {
                        "description": "Array of search categories",
                        "name": "filterCategories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchCategory"
                            }
                        }
                    },
                    {
                        "description": "Array of search languages",
                        "name": "filterLanguages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchLanguage"
                            }
                        }
                    },
                    {
                        "description": "Time filter",
                        "name": "filterTime",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchTime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/removePublisher": {
            "delete": {
                "description": "Delete publisher by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Delete publisher",
                "parameters": [
                    {
                        "description": "Delete Publisher DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/publisher.DeletePublisherDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/searchCategoryWithHints": {
            "post": {
                "description": "Search categories with hints",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search categories with hints",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/searchLanguages": {
            "post": {
                "description": "Search languages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search languages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/searchPeopleWithHints": {
            "post": {
                "description": "Search people with hints",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search people with hints",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/searchPublisherWithHints/": {
            "post": {
                "description": "Search publishers with hints using default search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search publishers with hints using default search",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/searchPublisherWithHints/{search}": {
            "post": {
                "description": "Search publishers with hints based on provided search string",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search publishers with hints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "search",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/service/config": {
            "get": {
                "description": "Full service config (env + app.yml)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get service config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.Config"
                        }
                    }
                }
            }
        },
        "/service/healthcheck": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Perform health check",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/updatePublisher": {
            "put": {
                "description": "Update publisher information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Update publisher",
                "parameters": [
                    {
                        "description": "Publisher DTO",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/publisher.DTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Config": {
            "type": "object",
            "properties": {
                "adminka": {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "cronSourcesRSS": {
                    "type": "string"
                },
                "elastic": {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    }
                },
                "environment": {
                    "type": "string"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "logger": {
                    "type": "object",
                    "properties": {
                        "toConsole": {
                            "type": "boolean"
                        },
                        "toELK": {
                            "type": "boolean"
                        },
                        "toFile": {
                            "type": "boolean"
                        },
                        "useDefaultGin": {
                            "type": "boolean"
                        },
                        "useZap": {
                            "type": "boolean"
                        }
                    }
                },
                "metrics": {
                    "type": "boolean"
                },
                "migrateElastic": {
                    "type": "boolean"
                },
                "migratePostgres": {
                    "type": "boolean"
                },
                "port": {
                    "type": "string"
                },
                "postgres": {
                    "type": "object",
                    "properties": {
                        "database": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "runtime": {
                    "type": "string"
                },
                "secretKeyJWT": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "tracing": {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    }
                },
                "useCronSourcesRSS": {
                    "type": "boolean"
                },
                "useTracingJaeger": {
                    "type": "boolean"
                }
            }
        },
        "dto.SearchCategory": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.SearchCountry": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "название страны",
                    "type": "string"
                }
            }
        },
        "dto.SearchLanguage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.SearchPeople": {
            "type": "object",
            "properties": {
                "fullName": {
                    "description": "имя",
                    "type": "string"
                }
            }
        },
        "dto.SearchPublishers": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "название издания",
                    "type": "string"
                }
            }
        },
        "dto.SearchString": {
            "type": "object",
            "properties": {
                "isExact": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                }
            }
        },
        "dto.SearchTime": {
            "type": "object",
            "properties": {
                "end": {
                    "description": "Окончание временного диапазона",
                    "type": "string"
                },
                "start": {
                    "description": "Начало временного диапазона",
                    "type": "string"
                }
            }
        },
        "publisher.AddPublisherDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "publisher.DTO": {
            "type": "object",
            "properties": {
                "add_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "string"
                }
            }
        },
        "publisher.DeletePublisherDTO": {
            "type": "object",
            "properties": {
                "publisher_id": {
                    "type": "string"
                }
            }
        },
        "source.AddSourceAndPublisherDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "rss_Url": {
                    "type": "string"
                }
            }
        },
        "source.AddSourceDTO": {
            "type": "object",
            "properties": {
                "publisher_id": {
                    "type": "string"
                },
                "rss_url": {
                    "type": "string"
                }
            }
        },
        "source.DTO": {
            "type": "object",
            "properties": {
                "add_date": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "string"
                },
                "rss_id": {
                    "type": "string"
                },
                "rss_url": {
                    "type": "string"
                }
            }
        },
        "source.DeleteSourceDTO": {
            "type": "object",
            "properties": {
                "rss_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:80",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Prospero",
	Description:      "News aggregator API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
